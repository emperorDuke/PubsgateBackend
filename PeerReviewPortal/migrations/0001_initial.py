# Generated by Django 4.0.3 on 2022-08-10 07:38

from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('SubmissionPortal', '0001_initial'),
        ('Journals', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='JournalSubmission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stage', models.CharField(max_length=255, verbose_name='stage')),
                ('is_accepted', models.DateTimeField(blank=True, default=None, null=True, verbose_name='is_accepted')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created_at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated_at')),
                ('author_submission', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='journal_submission', to='SubmissionPortal.authorsubmission')),
                ('journal', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='submissions', to='Journals.journal')),
                ('reviewers', models.ManyToManyField(related_name='submissions', to='Journals.reviewer')),
            ],
            options={
                'verbose_name': 'journal submission',
                'verbose_name_plural': 'journal submissions',
                'db_table': 'journal_submissions',
                'ordering': ('-created_at',),
            },
        ),
        migrations.CreateModel(
            name='ReviewerReport',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created_at')),
                ('journal_submission', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviewer_reports', to='PeerReviewPortal.journalsubmission')),
                ('reviewer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Journals.reviewer')),
            ],
            options={
                'verbose_name': 'reviewer_report',
                'verbose_name_plural': 'reviewer_reports',
                'db_table': 'reviewer_reports',
                'ordering': ('-created_at',),
            },
        ),
        migrations.CreateModel(
            name='ReviewerReportSection',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('response', models.TextField(verbose_name='response')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created_at')),
                ('report', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sections', to='PeerReviewPortal.reviewerreport')),
                ('section', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Journals.journalreportquestion')),
            ],
            options={
                'verbose_name': 'reviewer_report_section',
                'verbose_name_plural': 'reviewer_report_sections',
                'db_table': 'reviewer_report_sections',
                'ordering': ('created_at',),
            },
        ),
        migrations.CreateModel(
            name='JournalSubmissionEditorialTeam',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('role', models.IntegerField(blank=True, choices=[(1, 'Editor in chief'), (2, 'Line editor'), (3, 'Copy editor'), (4, 'Section editor')], default=4, verbose_name='role')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created_at')),
                ('editor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='submission_editorial_roles', to='Journals.editor')),
                ('journal_submission', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='editorial_members', to='PeerReviewPortal.journalsubmission')),
                ('permissions', models.ManyToManyField(related_name='journal_submission_roles', to='Journals.journalpermission')),
            ],
            options={
                'verbose_name': 'journal submission editorial team',
                'verbose_name_plural': 'journal submission editorial teams',
                'db_table': 'journal_submission_editorial_teams',
                'ordering': ('-created_at',),
            },
        ),
        migrations.CreateModel(
            name='EditorReport',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('detail', models.TextField(verbose_name='report_detail')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created_at')),
                ('editor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reports', to='Journals.editor')),
                ('journal_submission', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='editors_reports', to='PeerReviewPortal.journalsubmission')),
            ],
            options={
                'db_table': 'journal_submission_editor_reports',
            },
        ),
        migrations.AddConstraint(
            model_name='reviewerreportsection',
            constraint=models.UniqueConstraint(fields=('report', 'section'), name='unique_report_section'),
        ),
        migrations.AddConstraint(
            model_name='reviewerreport',
            constraint=models.UniqueConstraint(fields=('reviewer', 'journal_submission'), name='unique_reviewer_report'),
        ),
        migrations.AddConstraint(
            model_name='editorreport',
            constraint=models.UniqueConstraint(fields=('detail', 'editor', 'journal_submission'), name='unique_editor_report'),
        ),
    ]
